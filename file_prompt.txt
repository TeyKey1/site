First let's define a template, I will use Arc.mdx as an example.

<template start>
---
title: HTML5 canvas Arc Tutorial
sidebar_label: Arc
hide_table_of_contents: true
slug: Arc.html
---

Here will be the content of the post.

import Tabs from "@theme/Tabs";
import TabItem from "@theme/TabItem";

<Tabs>
  <TabItem value="Vanilla" default>
```js live vanilla
import Konva from 'konva';

// vanilla code here
```
  </TabItem>
  <TabItem value="React">
```js live react
import { Stage, Layer, Arc } from 'react-konva';

// react code here
const App = () => {
  return (
    <Stage width={window.innerWidth} height={window.innerHeight}>
      <Layer>
        <Arc
          x={window.innerWidth / 2}
          y={window.innerHeight / 2}
          innerRadius={40}
          outerRadius={70}
          angle={60}
          fill="yellow"
          stroke="black"
          strokeWidth={4}
        />
      </Layer>
    </Stage>
  );
};

export default App;
```
  </TabItem>
  <TabItem value="Vue">
```js live vue
// vue code here
<template>
  <v-stage :config="stageSize">
    <v-layer>
      <v-arc :config="arcConfig" />
    </v-layer>
  </v-stage>
</template>

<script setup>
const stageSize = {
  width: window.innerWidth,
  height: window.innerHeight
};

const arcConfig = {
  x: window.innerWidth / 2,
  y: window.innerHeight / 2,
  innerRadius: 40,
  outerRadius: 70,
  angle: 60,
  fill: 'yellow',
  stroke: 'black',
  strokeWidth: 4
};
</script>
```
  </TabItem>
</Tabs>
<template end>

If you see a link like this:
<!-- {% iframe /downloads/code/shapes/Arc.html %} -->
We need to replace it will vanilla, react and vue code. To find the code look into old_code folder.

Several tips:
make sure demos are as consistent as possible, so they produce identical visial result.
but every of them should follow vanilla, react and vue code structure.
If you insert a code from old_code folder, make sure it keep it as close as possible to the original code.
If you see `Instructions` section, make sure to make it bold.